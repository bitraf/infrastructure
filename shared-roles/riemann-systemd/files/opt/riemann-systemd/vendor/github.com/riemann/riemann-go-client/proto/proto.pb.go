// Code generated by protoc-gen-go.
// source: proto.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto.proto

It has these top-level messages:
	State
	Event
	Query
	Msg
	Attribute
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type State struct {
	Time             *int64   `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	State            *string  `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Service          *string  `protobuf:"bytes,3,opt,name=service" json:"service,omitempty"`
	Host             *string  `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Description      *string  `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Once             *bool    `protobuf:"varint,6,opt,name=once" json:"once,omitempty"`
	Tags             []string `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	Ttl              *float32 `protobuf:"fixed32,8,opt,name=ttl" json:"ttl,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *State) Reset()                    { *m = State{} }
func (m *State) String() string            { return proto1.CompactTextString(m) }
func (*State) ProtoMessage()               {}
func (*State) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *State) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *State) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *State) GetService() string {
	if m != nil && m.Service != nil {
		return *m.Service
	}
	return ""
}

func (m *State) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *State) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *State) GetOnce() bool {
	if m != nil && m.Once != nil {
		return *m.Once
	}
	return false
}

func (m *State) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *State) GetTtl() float32 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

type Event struct {
	Time             *int64       `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	State            *string      `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Service          *string      `protobuf:"bytes,3,opt,name=service" json:"service,omitempty"`
	Host             *string      `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Description      *string      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Tags             []string     `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	Ttl              *float32     `protobuf:"fixed32,8,opt,name=ttl" json:"ttl,omitempty"`
	Attributes       []*Attribute `protobuf:"bytes,9,rep,name=attributes" json:"attributes,omitempty"`
	TimeMicros       *int64       `protobuf:"varint,10,opt,name=time_micros" json:"time_micros,omitempty"`
	MetricSint64     *int64       `protobuf:"zigzag64,13,opt,name=metric_sint64" json:"metric_sint64,omitempty"`
	MetricD          *float64     `protobuf:"fixed64,14,opt,name=metric_d" json:"metric_d,omitempty"`
	MetricF          *float32     `protobuf:"fixed32,15,opt,name=metric_f" json:"metric_f,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto1.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Event) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Event) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *Event) GetService() string {
	if m != nil && m.Service != nil {
		return *m.Service
	}
	return ""
}

func (m *Event) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Event) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Event) GetTtl() float32 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

func (m *Event) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Event) GetTimeMicros() int64 {
	if m != nil && m.TimeMicros != nil {
		return *m.TimeMicros
	}
	return 0
}

func (m *Event) GetMetricSint64() int64 {
	if m != nil && m.MetricSint64 != nil {
		return *m.MetricSint64
	}
	return 0
}

func (m *Event) GetMetricD() float64 {
	if m != nil && m.MetricD != nil {
		return *m.MetricD
	}
	return 0
}

func (m *Event) GetMetricF() float32 {
	if m != nil && m.MetricF != nil {
		return *m.MetricF
	}
	return 0
}

type Query struct {
	String_          *string `protobuf:"bytes,1,opt,name=string" json:"string,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto1.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Query) GetString_() string {
	if m != nil && m.String_ != nil {
		return *m.String_
	}
	return ""
}

type Msg struct {
	Ok               *bool    `protobuf:"varint,2,opt,name=ok" json:"ok,omitempty"`
	Error            *string  `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	States           []*State `protobuf:"bytes,4,rep,name=states" json:"states,omitempty"`
	Query            *Query   `protobuf:"bytes,5,opt,name=query" json:"query,omitempty"`
	Events           []*Event `protobuf:"bytes,6,rep,name=events" json:"events,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto1.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Msg) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

func (m *Msg) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *Msg) GetStates() []*State {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *Msg) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *Msg) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type Attribute struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Attribute) Reset()                    { *m = Attribute{} }
func (m *Attribute) String() string            { return proto1.CompactTextString(m) }
func (*Attribute) ProtoMessage()               {}
func (*Attribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Attribute) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Attribute) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto1.RegisterType((*State)(nil), "State")
	proto1.RegisterType((*Event)(nil), "Event")
	proto1.RegisterType((*Query)(nil), "Query")
	proto1.RegisterType((*Msg)(nil), "Msg")
	proto1.RegisterType((*Attribute)(nil), "Attribute")
}

func init() { proto1.RegisterFile("proto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x91, 0x3f, 0x4f, 0xf3, 0x30,
	0x10, 0x87, 0xe5, 0x38, 0x49, 0x93, 0x4b, 0xff, 0xbc, 0xf2, 0xab, 0xf6, 0xbd, 0xe9, 0x95, 0x95,
	0x05, 0x4f, 0x1d, 0x10, 0x62, 0x67, 0x60, 0x64, 0x40, 0x7c, 0x80, 0x2a, 0xa4, 0x26, 0x58, 0x6d,
	0xe3, 0x62, 0x5f, 0x2b, 0x75, 0xe4, 0xb3, 0xf2, 0x45, 0x90, 0xdd, 0x54, 0xb0, 0x30, 0xb2, 0x58,
	0xf2, 0xa3, 0xf3, 0xdd, 0xef, 0x39, 0x43, 0xb5, 0x77, 0x96, 0xec, 0x32, 0x9e, 0xf5, 0x3b, 0x83,
	0xec, 0x89, 0x1a, 0xd2, 0x62, 0x0c, 0x29, 0x99, 0x9d, 0x46, 0x26, 0x99, 0xe2, 0x62, 0x02, 0x99,
	0x0f, 0x18, 0x13, 0xc9, 0x54, 0x29, 0x66, 0x30, 0xf2, 0xda, 0x1d, 0x4d, 0xab, 0x91, 0x47, 0x30,
	0x86, 0xf4, 0xd5, 0x7a, 0xc2, 0x34, 0xde, 0xfe, 0x42, 0xb5, 0xd6, 0xbe, 0x75, 0x66, 0x4f, 0xc6,
	0xf6, 0x98, 0x5d, 0x4a, 0x6c, 0xdf, 0x6a, 0xcc, 0x25, 0x53, 0x45, 0x6c, 0xdf, 0x74, 0x1e, 0x47,
	0x92, 0xab, 0x52, 0x54, 0xc0, 0x89, 0xb6, 0x58, 0x48, 0xa6, 0x92, 0xfa, 0x83, 0x41, 0x76, 0x7f,
	0xd4, 0x3d, 0xfd, 0x4a, 0x86, 0x1f, 0xa6, 0x8a, 0xff, 0x00, 0x0d, 0x91, 0x33, 0xcf, 0x07, 0xd2,
	0x1e, 0x4b, 0xc9, 0x55, 0x75, 0x0d, 0xcb, 0xbb, 0x0b, 0x0a, 0xfd, 0x42, 0x96, 0xd5, 0xce, 0xb4,
	0xce, 0x7a, 0x84, 0x18, 0x69, 0x0e, 0x93, 0x9d, 0x26, 0x67, 0xda, 0x95, 0x37, 0x3d, 0xdd, 0xde,
	0xe0, 0x44, 0x32, 0x25, 0xc4, 0x1f, 0x28, 0x06, 0xbc, 0xc6, 0xa9, 0x64, 0x8a, 0x7d, 0x23, 0x2f,
	0x38, 0x8b, 0x96, 0xff, 0x20, 0x7b, 0x3c, 0x68, 0x77, 0x12, 0x53, 0xc8, 0x3d, 0x39, 0xd3, 0x77,
	0x51, 0xb3, 0xac, 0x3b, 0xe0, 0x0f, 0xbe, 0x13, 0x00, 0x89, 0xdd, 0x44, 0xd5, 0x22, 0x98, 0x6b,
	0xe7, 0xac, 0x1b, 0x44, 0x17, 0xe1, 0x45, 0x13, 0x62, 0xa6, 0x31, 0x66, 0xbe, 0x3c, 0x7f, 0xd9,
	0x1c, 0xb2, 0xb7, 0xd0, 0x32, 0xca, 0x06, 0x7c, 0x1e, 0xb0, 0x80, 0x5c, 0x87, 0x75, 0x7a, 0xcc,
	0x87, 0xf2, 0xb8, 0xdd, 0xfa, 0x0a, 0xca, 0x2f, 0xbd, 0x0a, 0xf8, 0x46, 0x9f, 0x90, 0xc9, 0x44,
	0x95, 0x61, 0xde, 0xb1, 0xd9, 0x1e, 0x86, 0x4d, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x28, 0x53,
	0x67, 0x10, 0x22, 0x02, 0x00, 0x00,
}
